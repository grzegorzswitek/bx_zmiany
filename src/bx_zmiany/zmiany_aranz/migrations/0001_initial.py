# Generated by Django 3.1.7 on 2022-12-22 19:26

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=12, unique=True)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('location_desc', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Building',
                'verbose_name_plural': 'Buildings',
            },
        ),
        migrations.CreateModel(
            name='Cost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('net', models.DecimalField(decimal_places=2, max_digits=8)),
                ('vat', models.DecimalField(decimal_places=2, max_digits=7)),
                ('gross', models.DecimalField(decimal_places=2, max_digits=8)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Cost',
                'verbose_name_plural': 'Costs',
            },
        ),
        migrations.CreateModel(
            name='CostEstimate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(blank=True, max_length=50, null=True)),
                ('net', models.DecimalField(decimal_places=2, max_digits=8)),
                ('vat', models.DecimalField(decimal_places=2, max_digits=7)),
                ('gross', models.DecimalField(decimal_places=2, max_digits=8)),
                ('construction_net', models.DecimalField(decimal_places=2, max_digits=8)),
                ('sanitary_net', models.DecimalField(decimal_places=2, max_digits=8)),
                ('electric_net', models.DecimalField(decimal_places=2, max_digits=8)),
                ('other_net', models.DecimalField(decimal_places=2, max_digits=8)),
                ('creation_date', models.DateField()),
                ('added_date', models.DateTimeField(auto_now_add=True)),
                ('number', models.CharField(blank=True, max_length=10, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'CostEstimate',
                'verbose_name_plural': 'CostEstimates',
            },
        ),
        migrations.CreateModel(
            name='CostEstimateOfProcedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('for_customer', models.BooleanField(default=False)),
                ('for_general_contractor', models.BooleanField(default=False)),
                ('cost_estimate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zmiany_aranz.costestimate')),
            ],
            options={
                'verbose_name': 'CostEstimateOfProcedure',
                'verbose_name_plural': 'CostEstimateOfProcedures',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('e_mail', models.EmailField(blank=True, max_length=254, null=True)),
                ('id_crm', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='CustomerHandler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('e_mail', models.EmailField(blank=True, max_length=254, null=True)),
                ('branch', models.IntegerField(choices=[(0, 'Toru≈Ñ'), (1, 'Bydgoszcz'), (2, 'Olsztyn'), (3, 'Warszawa')])),
            ],
            options={
                'verbose_name': 'CustomerHandler',
                'verbose_name_plural': 'CustomerHandlers',
            },
        ),
        migrations.CreateModel(
            name='CustomerOfProcedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shares', models.FloatField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zmiany_aranz.customer')),
            ],
            options={
                'verbose_name': 'CustomerOfProcedure',
                'verbose_name_plural': 'CustomerOfProcedures',
            },
        ),
        migrations.CreateModel(
            name='Investment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=12, unique=True)),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'verbose_name': 'Investment',
                'verbose_name_plural': 'Investments',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='invoices')),
                ('number', models.CharField(blank=True, max_length=10, null=True)),
                ('invoice_date', models.DateField()),
                ('due_date', models.DateField()),
                ('net', models.DecimalField(decimal_places=2, max_digits=8)),
                ('vat', models.DecimalField(decimal_places=2, max_digits=7)),
                ('gross', models.DecimalField(decimal_places=2, max_digits=8)),
                ('description', models.TextField(blank=True, null=True)),
                ('paid', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
            },
        ),
        migrations.CreateModel(
            name='KindOfCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'KindOfCost',
                'verbose_name_plural': 'KindOfCosts',
            },
        ),
        migrations.CreateModel(
            name='KindOfPremises',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=12, unique=True)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'KindOfPremises',
                'verbose_name_plural': 'KindOfPremisess',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('e_mail', models.EmailField(blank=True, max_length=254, null=True)),
                ('role', models.CharField(blank=True, max_length=50, null=True)),
                ('company', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
            },
        ),
        migrations.CreateModel(
            name='Premises',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_crm', models.IntegerField(blank=True, null=True, unique=True)),
                ('symbol', models.CharField(max_length=20, unique=True)),
                ('staircase', models.CharField(blank=True, max_length=10, null=True)),
                ('storey', models.CharField(blank=True, max_length=10, null=True)),
                ('building', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='zmiany_aranz.building')),
                ('kind', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='zmiany_aranz.kindofpremises')),
            ],
            options={
                'verbose_name': 'Premises',
                'verbose_name_plural': 'Premisess',
            },
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_number', models.IntegerField(editable=False)),
                ('_year', models.CharField(editable=False, max_length=4)),
                ('status', models.IntegerField(choices=[(0, 'Nieokre≈õlony'), (1, 'Rozpoczƒôta'), (2, 'Zako≈Ñczona')], default=0)),
                ('invoice_status', models.IntegerField(choices=[(0, 'Nieokre≈õlony'), (1, 'Do wystawienia'), (2, 'Wystawiona'), (3, 'Wys≈Çana'), (4, 'Op≈Çacona'), (5, 'Anulowana - korekta')], default=0)),
                ('invoice_month', models.DateField(blank=True, null=True)),
                ('gross_fee_for_arran_changes', models.DecimalField(decimal_places=2, default=650.0, max_digits=6)),
                ('accepted', models.BooleanField(default=False)),
                ('directory', models.CharField(blank=True, max_length=260, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('cost_estimates', models.ManyToManyField(blank=True, related_name='procedures', through='zmiany_aranz.CostEstimateOfProcedure', to='zmiany_aranz.CostEstimate')),
                ('costs', models.ManyToManyField(blank=True, related_name='procedures', to='zmiany_aranz.Cost')),
                ('customer_handler', models.ManyToManyField(blank=True, related_name='procedures', to='zmiany_aranz.CustomerHandler')),
                ('customers', models.ManyToManyField(blank=True, related_name='proceudres', through='zmiany_aranz.CustomerOfProcedure', to='zmiany_aranz.Customer')),
                ('invoices', models.ManyToManyField(blank=True, related_name='procedures', to='zmiany_aranz.Invoice')),
                ('persons', models.ManyToManyField(blank=True, related_name='procedures', to='zmiany_aranz.Person')),
                ('premises', models.ManyToManyField(blank=True, related_name='precedures', to='zmiany_aranz.Premises')),
            ],
            options={
                'verbose_name': 'Procedure',
                'verbose_name_plural': 'Procedures',
                'unique_together': {('_number', '_year')},
            },
        ),
        migrations.CreateModel(
            name='InvestmentStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=12, unique=True)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('number_of_flats', models.PositiveIntegerField(blank=True, null=True)),
                ('investment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='zmiany_aranz.investment')),
            ],
            options={
                'verbose_name': 'InvestmentStage',
                'verbose_name_plural': 'InvestmentStages',
            },
        ),
        migrations.AddField(
            model_name='customerofprocedure',
            name='procedure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zmiany_aranz.procedure'),
        ),
        migrations.AddField(
            model_name='costestimateofprocedure',
            name='procedure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zmiany_aranz.procedure'),
        ),
        migrations.AddField(
            model_name='cost',
            name='kind',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='zmiany_aranz.kindofcost'),
        ),
        migrations.AddField(
            model_name='building',
            name='investment_stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='zmiany_aranz.investmentstage'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
